trigger:
  branches:
    include:
    - 'release/integration/*'

variables:
  - template: config/config-development.yml
  - group: vg-frd-azu-ot-desa-abs-aplicacionFeBase

stages:
- stage: 'stg_bu_desa_AppBaseContinuousIntegration'
  displayName: 'stg-bu-desa-AppBaseContinuousIntegration'
  jobs:
  - job: job_bu_CompileFrontend
    displayName: job_bu_CompileFrontend
    pool:
      name: $(nameAgentPool)
    steps:
    - task: npmAuthenticate@0
      displayName: 'stp-NPMAuthentication'
      inputs:
        workingFile: $(principalPath)/.npmrc
        customEndpoint: 'scn-desa-orgnssfebase-aplicacionFeBaseAppFrontend'
    - task: replacetokens@6
      inputs:
        root: '$(principalPath)/environments'
        sources: '.env.$(environment)'
        addBOM: true
      displayName: 'stp-ReplaceTokensEnv'
    - task: CmdLine@2
      inputs:
        script: |
          cp $(principalPath)/environments/.env.$(environment) $(principalPath)/.env
      displayName: 'stp-CopyEnvFile'
    - task: CmdLine@2
      inputs:
        script: |
          cd $(principalPath)
          #Dependencia por instalaci√≥n de husky
          git init
          ls -la
      displayName: 'stp-GitInitDirectory'
    - task: CmdLine@2
      inputs:
        script: |
          cd $(principalPath)
          export PATH=/usr/local/nodejs/bin:$PATH
          npm install
      displayName: 'stp-InstallDependencies'
    - task: CmdLine@2
      inputs:
        script: |
          cd $(principalPath)
          export PATH=/usr/local/nodejs/bin:$PATH
          npm run test
      displayName: 'stp-UnitTestsProject'
    - task: CmdLine@2
      inputs:
        script: |
          cd $(principalPath)
          export PATH=/usr/local/nodejs/bin:$PATH
          npm run build
      displayName: 'stp-CompileProject'
    - task: ArchiveFiles@2
      displayName: 'stp-ArchiveArtifacts'
      inputs:
        rootFolderOrFile: '$(principalPath)/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(principalPath).zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      displayName: 'stp-PublishZipArtifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: '$(pipeline-artifact-name1)'